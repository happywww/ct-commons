package com.constanttherapy.service.proxies;

import com.constanttherapy.service.ServiceMessage;
import com.constanttherapy.util.CTTestBase;
import com.constanttherapy.util.GsonHelper;
import org.junit.Test;

import javax.ws.rs.core.Response;
import java.util.HashMap;
import java.util.Map;

public class MessagingServiceProxyTest extends CTTestBase
{
	private final String serviceName = "ct-service-420";

	@Test
	public void testSendMessageUsingBody()
	{
		MessagingServiceProxy msp = new MessagingServiceProxy(getMockUriInfo(this.serviceName));

		MessagingServiceProxyArgs args = new MessagingServiceProxyArgs();
		args.recipients = "madvani@gmail.com";
		args.subject = "Test Message";
		args.body = "Generated by unit test for sendMessageUsingBody()";
		Response response = msp.sendMessageUsingBody(args);
		assert (response.getStatus() > 0);
	}

	@Test
	public void testSendMessageUsingTemplate()
	{
		MessagingServiceProxy msp = new MessagingServiceProxy(getMockUriInfo(this.serviceName));

		MessagingServiceProxyArgs args = new MessagingServiceProxyArgs();
		args.recipients = "madvani@gmail.com";
		args.replacementTokensJson = "{$(firstname):Binto,$(username):bjohn,$(password):tagamed}";
		args.templateType = "to_patient_on_signup";

		Response response = msp.sendMessageUsingTemplate(args);

		/*
		Response response = msp.sendMessageUsingTemplate("madvani@gmail.com", "to_patient_on_signup",
				"{$(firstname):Binto,$(username):bjohn,$(password):tagamed}", false);
		 */
		assert (response.getStatus() > 0);
	}

	@Test
	public void test_getMessageFromTemplateUsingJson()
	{
		MessagingServiceProxy msp = new MessagingServiceProxy(getMockUriInfo(this.serviceName));

		Map<String, String> map = new HashMap<String, String>();
		map.put("$(cost)", "$19.99");
		String json = GsonHelper.toJson(map);
		ServiceMessage msg = msp.getMessageFromTemplateUsingJson("msg_your_current_subscription_cost", json);
		assert (msg != null);
	}

	@Test
	public void test_sendSubscriptionStateTransitionedEmailIfNeeded()
	{
		MessagingServiceProxy msg = new MessagingServiceProxy(getMockUriInfo(this.serviceName));

		MessagingServiceProxyArgs args = new MessagingServiceProxyArgs();
		args.recipients = "mahendra.advani@constanttherapy.com,madvani@gmail.com,mcaddu@gmail.com";
		args.subject = "Stripe Charge Failed For Customer: Action Required";
		args.body = "Charge failed for User Id: " + 1234;
		msg.sendMessageUsingBody(args);
	}
}
